Name|Description|Value
\textbf{CrPsFailData\_t}|Type used for the Failure Data of a packet.|unsigned int
\textbf{CrPsOneBit\_t}|Generic 1-bit type (least significant bit in 8-bit byte)|unsigned char
\textbf{CrPsTwoBit\_t}|Generic 2-bit type (least significant 2 bits in 8-bit byte)|unsigned char
\textbf{CrPsThreeBit\_t}|Generic 3-bit type (least significant 3 bits in 8-bit byte)|unsigned char
\textbf{CrPsFourBit\_t}|Generic 4-bit type (least significant4 bits in 16-bit word)|unsigned char
\textbf{CrPsFourteenBit\_t}|Generic 14-bit type (least significant 14 bits in 16-bit word)|unsigned short
\textbf{CrPsElevenBit\_t}|Generic 11-bit type (least-significants 11 bits in 16-bit word)|unsigned short
\textbf{CrPsPartSeqNmb\_t}|Type for part sequence number|unsigned short
\textbf{CrPsTransId\_t}|Type for transaction identifier|unsigned short
\textbf{CrPsSID\_t}|Type for structure identifier|unsigned short
  SID\_N\_OF\_EVT|SID for HK packet holding number of generated events of each severity level|1
  SID\_HK\_CNT|SID for HK packet holding the cycle counters for the HK packets|2
\textbf{CrPsRepNum\_t}|Type used for repetition number|unsigned char
\textbf{CrPsFailReason\_t}|Type for the transfer failure reason|unsigned short
\textbf{CrPsNParMon\_t}|Type for the number of service 12 parameter monitors|unsigned char
\textbf{CrPsNFuncMon\_t}|Type for the number of service 12 functional monitors|unsigned char
\textbf{CrPsFunctMonCheckStatus\_t}|Type for the checking status of a service 12 functional monitor|unsigned char
  MON\_UNCHECKED|Functional monitor has not yet been notified since it was last enabled|1
  MON\_INVALID|The validity condition for the functional monitor is not satisfied|2
  MON\_RUNNING|The number of parameter monitors in the functional monitor which reporterd a monitoring violation is below the minimum failing number|3
  MON\_FAILED|The number of parameter monitors in the functional monitor which reported a monitoring violation is greater than or eqaul to the minimum failing number|4
\textbf{CrPsParMonCheckStatus\_t}|Type for the checking status of a service 12 parameter monitor|unsigned char
  MON\_VALID|Parameter is valid|1
  MON\_NOT\_EXP|Parameter does not have the expected value|2
  MON\_ABOVE|Parameter value is above its upper limit|3
  MON\_BELOW|Parameter value is below its lower limit|4
  MON\_DEL\_ABOVE|Parameter delta-value (dfference between succesve values) is above its upper limit|5
  MON\_DEL\_BELOW|Parameter delta-value (difference between succesve values) is below its lower limit|6
\textbf{CrPsMonCheckType\_t}|Type of service 12 monitoring check|unsigned char
  EXP\_VAL\_CHECK|Expected value check|1
  LIM\_CHECK|Limit check|2
  DEL\_CHECK|Delta check|3
\textbf{CrPsEvtId\_t}|Type for Event Identifiers|unsigned short
  EVT\_DOWN\_ABORT|Generated by an LPT State Machine when a down-transfer is aborted|1
  EVT\_UP\_ABORT|Generated by an LPT State Machine when an up-transfer is aborted|2
  EVT\_MON\_LIM\_R|Generated when a Limit Check Monitoring Procedure has detected an invalid parameter value of real type|3
  EVT\_MON\_LIM\_I|Generated when a Limit Check Monitoring Procedure has detected an invalid parameter value of integer type|4
  EVT\_MON\_EXP|Generated when a Expected Value Monitoring Procedure has detected an invalid parameter value of integer type|5
  EVT\_MON\_DEL\_R|Generated when a Delta Check Monitoring Procedure has detected an invalid parameter value of real type|6
  EVT\_MON\_DEL\_I|Generated when a Delta Check Monitoring Procedure has detected an invalid parameter value of integer type|7
  EVT\_FMON\_FAIL|Generated when a functional monitor has declared a failure|8
  EVT\_CLST\_FULL|Generated when the Monitoring Function Procedure tries to add an entry to the Check Transition List but the list is full|9
  EVT\_DUMMY\_1|Dummy level 1 event used for testing purposes|252
  EVT\_DUMMY\_2|Dummy level 2 event used for testing purposes|253
  EVT\_DUMMY\_3|Dummy level 3 event used for testing purposes|254
  EVT\_DUMMY\_4|Dummy level 4 event used for testing purposes|255
\textbf{CrPsValCheckExpVal\_t}|Type used for the expected value of a validity check|unsigned short
\textbf{CrPsRepNumber\_t}|Type used for the repetition number of a service 12 parameter monitor|unsigned char
\textbf{CrPsMinFailNmb\_t}|Type used for the minimum fail number of a service 12 functional monitor|unsigned char
\textbf{CrPsParMonId\_t}|Type used for the identifier of a service 12 parameter monitor|unsigned short
\textbf{CrPsFuncMonId\_t}|Type used for the identifier of a service 12 functional monitor|unsigned char
\textbf{CrPsProtStatus\_t}|Type for the protected status of a service 12 functional monitor|unsigned char
  UNPROTECTED|Not protected|0
  PROTECTED|Protected|1
\textbf{CrPsRepDelay\_t}|Type for the reporting of service 12 monitoring violations|unsigned short
\textbf{CrPsAckFlag\_t}|Acknowledge Flag (least significant bit in 8-bit byte)|unsigned char
  NO\_ACK|No acknowledge required|0
  ACK|Acknowledge required|1
\textbf{CrPsThirteenBit\_t}|Generic 13-bit type (least significant 13 bits in 16-bit word)|unsigned short
\textbf{CrPsSixteenBit\_t}|Generic 16-bit type|unsigned short
\textbf{CrPsThirtytwoBit\_t}|Generic 32-bit Type|unsigned int
\textbf{CrPsPrgStep\_t}|Type for TC Progress Step|unsigned char
\textbf{CrPsNPar\_t}|Type for number of parameters|unsigned char
\textbf{CrPsParId\_t}|Type used for parameter identifier|unsigned short
\textbf{CrPsNGroups\_t}|Type for number of groups|unsigned char
\textbf{CrPsNSID\_t}|Type for the number of SIDs|unsigned char
\textbf{CrPsEnDis\_t}|Generic enabled/disabled type|unsigned char
  DISABLED|Disabled|0
  ENABLED|Enabled|1
\textbf{CrPsNEvtId\_t}|Type for number of event identifiers|unsigned short
\textbf{CrPsEightBit\_t}|Generic 8-bit type|unsigned char
\textbf{CrPsNEvtRep\_t}|Type for number of event reports|unsigned short
\textbf{CrPsCycleCnt\_t}|Type for the cycle counter and HK report periods|unsigned short
\textbf{CrPsSampleBufId\_t}|Type for identifiers of the sampling buffer|unsigned char
\textbf{CrPsTimeSec\_t}|Type for a real-valued time expressed in seconds|unsigned int
\textbf{CrPsNOfCmd\_t}|Type used for the number of commands|unsigned short
\textbf{CrPsNOfLinks\_t}|Type for number up- and down-links|unsigned char
\textbf{CrPsSize\_t}|Type for the size of a large packets|unsigned short
\textbf{CrPsNCmdRep\_t}|Type for number of commands and reports in component factories|unsigned int
\textbf{CrPsNTba\_t}|Type for number of time-based scheduled activity (TBA)|unsigned short
\textbf{CrPsNSubSchedGroup\_t}|Type for the number of sub-schedules and of groups|unsigned char
\textbf{CrPsFailCode\_t}|Type used for a service 1 Failure Code|CrFwOutcome\_t
  VER\_CMD\_INV\_DEST|Failure code for all (1,10) reports|129
  VER\_REP\_CR\_FD|Failure code for start actions when they unsuccessfully attempt to create a new report from the OutFactory|130
  VER\_OUTLOADER\_FD|Failure code for start actions when the Load operation in the OutLoader has failed|131
  VER\_SID\_IN\_USE|A (3,1) or (3,2) command attempted to create a new report with a SID which is already in use|132
  VER\_FULL\_RDL|A (3,1) or (3,2) command attempted to create a new report at a time when the RDL is already full|133
  VER\_ILL\_DI\_ID|A service 3 command carried an illegal data item identifier|134
  VER\_ILL\_NID|A service 3 ommand carried too many data item identifiers|135
  VER\_ILL\_SID|A service 3 command had an invalid SID|136
  VER\_ENB\_SID|A service 3 command encountered an enabled SID|137
  VER\_MI\_S3\_FD|A multi-instruction service 3 command has failed|138
   VER\_FACT\_PRGR\_FD|The progress action of a multi-instruction service 3 command has failed to retrieve a report from the OutFactory|139
  VER\_ILL\_EID|The start action of a service 5 command has encountered an illegal Event Identifier (EID)|140
  VER\_EID\_ST\_FD|All the instructions in a service 5 command have been rejected|141
  VER\_ILL\_MON|A Parameter or Functional Monitor Identifier in a service 12 command is out-of-range or not defined|142
  VER\_MON\_START\_FD|All the instructions in a service 12 command have been rejected|143
  VER\_PMDL\_FULL|A service 12 command has found the Parameter Monitor Definition List (PMDL) full|144
  VER\_MON\_ILL\_DI|A service 12 command has found the data item identifier of the parameter to be monitored illegal|145
  VER\_MON\_PROT|A service 12 command as found a parameter monitor which belongs to a protected functional monitor|146
  VER\_MON\_ENB|A service 12 command has found a parameter or functional monitor which is enabled|147
  VER\_MON\_USE|A service 12 command has found a parameter monitor which is used by a functional monitor|148
  VER\_FMDL\_FULL|A service 12 command has found a Functional Monitor Definition List (FMDL) full|149
  VER\_MON\_TMP|A service 12 command has found too many parameter monitors in a functional monitor|150
  VER\_MON\_MFN|A service 12 command has found a value of minimum failing number equal to zero|152
  VER\_SCD\_ILL\_SS|Failure code for start action of service 11 command when it finds an illegal sub-schedule identifier|153
  VER\_FULL\_TBS|A service 11 command found the Time-Based Schedule (TBS) full|154
  VER\_SCD\_ILL\_G|A service 11 command found an illegal schedule group identifier|155
  VER\_SCD\_ILL\_RT|A service 11 command found an illegal release time|156
  VER\_SCD\_ILL\_DS|A service 11 command found an illegal destination for an scheduled command|157
  VER\_SCD\_CRFAIL|A service 11 command was unable to create an InCommand for a scheduled command (either due to lack of resources or due to illegal command type)|158
  VER\_SCD\_ST\_FD|All instructions in a service 11 command have been rejected|159
  VER\_ILL\_ACT\_ID|Command (11,5) was unable to find an activity identifier in the TBS|160
  VER\_TST\_TO|The time-out of the (17,3) command has triggered|161
  VER\_CRE\_FD|The InLoader has failed to create an InCommand to hold an incoming command|254
  VER\_CMD\_LD\_FD|The InLoader has failed to load an InCommand component into its InManager|255
