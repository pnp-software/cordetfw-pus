/**
 * @file
 * @ingroup gen_cfw
 *
 * Implementation of TC(11,4) ScdInsTbaCmd as an incoming command.
 *
 * @note This file was generated on 2018-09-29 23:48:04
 * @author Automatically Generated by CORDET Editor
 * @copyright P&P Software GmbH
 */
#ifndef CRPSINCMDSCDINSTBACMD_H_
#define CRPSINCMDSCDINSTBACMD_H_

#include "CrPsConstants.h"
#include "CrPsTypes.h"

#include "FwSmCore.h"
#include "CrFwConstants.h"

/**
 * Start action of TC(11,4) ScdInsTbaCmd.
 * Run the procedure Start Action of (11,4) Command of figure
 * \image html CrPsCmd11s4Start.png "Start Action of Command to Insert
 * Activities into TBS". This procedure first checks that the sub-schedule
 * identifier has a legal value and then it checks the TBAs in the command. A
 * TBA is rejected if its group identifier is illegal, or if its release time
 * is smaller than the current time plus the time margin, or if the TBS is
 * already full, or if there are insufficient resources to create an InCommand
 * component to encapsulate the command embedded in the activity.
 * @param smDesc The state machine descriptor.
 */
void CrPsInCmdScdInsTbaCmdStartAction(FwSmDesc_t smDesc);

/**
 * Progress action of TC(11,4) ScdInsTbaCmd.
 * For all the activities in the command which have been accepted by the Start
 * Action, the following is done:
 *
 * (a) The TBS is scanned and, when a free slot is found, the activity is
 * loaded in the free slot
 * (b) If the release time of the TBA pointed at by firstTba is larger than
 * the release time of the new TBA, then the value of firstTba is updated to
 * point to the newly inserted TBA
 * (c) The nextTba and prevTba pointers of the newly inserted TBA and of its
 * previous and next TBA are updated to keep the consistency of the TBS
 * (d) The number of scheduled activities (nOfTba) is incremented by 1
 * (e) The number of activities in the sub-schedule (nOfTbaInSubSched) to
 * which the newly inserted TBA belongs is incremented by 1
 * (f) The number of activities in the group (nOfTbaInGroup) to which the
 * newly inserted TBA belongs is incremented by 1
 * (g) If the sub-schedule to which the newly inserted TBA belongs was empty,
 * then the number of non-empty sub-schedules (nOfSubSched) is incremented by
 * one
 *
 * After all actvities have been processed, the action outcome is set to:
 * 'completed'.
 * @param smDesc The state machine descriptor.
 */
void CrPsInCmdScdInsTbaCmdProgressAction(FwSmDesc_t smDesc);


/*----------------------------------------------------------------------------*/
#endif /* CRPSINCMDSCDINSTBACMD_H */
