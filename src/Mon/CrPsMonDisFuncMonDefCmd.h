/**
 * @file
 * @ingroup gen_cfw
 *
 * Implementation of TC(12,20) MonDisFuncMonDefCmd.
 *
 * @note This file was generated on 2018-07-10 22:34:00
 * @author Automatically Generated by CORDET Editor
 * @copyright P&P Software GmbH
 */
#ifndef CRPSMONDISFUNCMONDEFCMD_H_
#define CRPSMONDISFUNCMONDEFCMD_H_

#include "CrPsConstants.h"
#include "CrPsTypes.h"

#include "FwSmCore.h"
#include "CrFwConstants.h"

/**
 * Start action of TC(12,20) MonDisFuncMonDefCmd.
 * Run the procedure Start Action of Multi-Functional Monitor Commands of
 * figure \ref{fig:Cmd12FMonIdStart}
 * @param smDesc The state machine descriptor.
 */
void CrPsMonDisFuncMonDefCmdStartAction(FwSmDesc_t smDesc);

/**
 * Progress action of TC(12,20) MonDisFuncMonDefCmd.
 * For all the valid functional monitor identifiers: enable the functional
 * monitor by setting its isEnabled field in the FDML to true. Set action
 * outcome to 'completed'. Decrement the data pool variable representing the
 * number of enabled functional monitors by the number of disabled functional
 * monitors. Set the action outcome to 'completed'.
 * @param smDesc The state machine descriptor.
 */
void CrPsMonDisFuncMonDefCmdProgressAction(FwSmDesc_t smDesc);


/*----------------------------------------------------------------------------*/
#endif /* CRPSMONDISFUNCMONDEFCMD_H */
