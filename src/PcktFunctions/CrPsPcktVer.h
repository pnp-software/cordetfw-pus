/**
 * @file
 * @ingroup gen_pck
 *
 * Interface for accessing fields in packets of service "Ver".
 *
 * @note This file was generated on 2018-07-25 18:44:05
 * @author Automatically Generated by CORDET Editor
 * @copyright P&P Software GmbH
 */
#ifndef CRPSPCKTVER_H_
#define CRPSPCKTVER_H_

#include "CrPsTypes.h"

#include "CrPsPckt.h"
/**
 * Structure for VerSuccAccRep
 */
typedef struct __attribute__((packed)) _VerSuccAccRep_t {
   /**
    * Packet header.
    */
   TmHeader_t Header;

   /**
    * Spacer block.
    */
   uint8_t block_3[2];

   /**
    * Packet sequence control of telecommand being acknowledged
    */
   CrPsSixteenBit_t TcPcktSeqCtrl;
   
} VerSuccAccRep_t ;

/**
 * Structure for VerFailedAccRep
 */
typedef struct __attribute__((packed)) _VerFailedAccRep_t {
   /**
    * Packet header.
    */
   TmHeader_t Header;

   /**
    * Spacer block.
    */
   uint8_t block_3[2];

   /**
    * Packet Seq. Control of Acknowledged TC
    */
   CrPsSixteenBit_t TcPcktSeqCtrl;
   
   /**
    * Failure Identification Code
    */
   CrPsFailCode_t TcFailCode;
   
   /**
    * Failure Data
    */
   CrPsThirtytwoBit_t TcFailData;
   
   /**
    * Type of Acknowledged TC
    */
   CrPsEightBit_t TcType;
   
   /**
    * Subtype of Acknowledged TC
    */
   CrPsEightBit_t TcSubtype;
   
   /**
    * Discriminant of Acknowledged TC
    */
   CrFwDiscriminant_t TcDisc;
   
} VerFailedAccRep_t ;

/**
 * Structure for VerSuccStartRep
 */
typedef struct __attribute__((packed)) _VerSuccStartRep_t {
   /**
    * Packet header.
    */
   TmHeader_t Header;

   /**
    * Spacer block.
    */
   uint8_t block_3[2];

   /**
    * Packet Seq. Control of Acknowledged TC
    */
   CrPsSixteenBit_t TcPcktSeqCtrl;
   
} VerSuccStartRep_t ;

/**
 * Structure for VerFailedStartRep
 */
typedef struct __attribute__((packed)) _VerFailedStartRep_t {
   /**
    * Packet header.
    */
   TmHeader_t Header;

   /**
    * Spacer block.
    */
   uint8_t block_3[2];

   /**
    * Packet Seq. Control of Acknowledged TC
    */
   CrPsSixteenBit_t TcPcktSeqCtrl;
   
   /**
    * Failure Identification Code
    */
   CrPsFailCode_t TcFailCode;
   
   /**
    * Failure Data
    */
   CrPsThirtytwoBit_t TcFailData;
   
   /**
    * Type of Acknowledged TC
    */
   CrPsEightBit_t TcType;
   
   /**
    * Subtype of Acknowledged TC
    */
   CrPsEightBit_t TcSubtype;
   
   /**
    * Discriminant of Acknowledged TC
    */
   CrFwDiscriminant_t TcDisc;
   
} VerFailedStartRep_t ;

/**
 * Structure for VerSuccPrgrRep
 */
typedef struct __attribute__((packed)) _VerSuccPrgrRep_t {
   /**
    * Packet header.
    */
   TmHeader_t Header;

} VerSuccPrgrRep_t ;

/**
 * Structure for VerFailedPrgrRep
 */
typedef struct __attribute__((packed)) _VerFailedPrgrRep_t {
   /**
    * Packet header.
    */
   TmHeader_t Header;

   /**
    * Spacer block.
    */
   uint8_t block_3[2];

   /**
    * Packet Seq. Control of Acknowledged TC
    */
   CrPsSixteenBit_t TcPcktSeqCtrl;
   
   /**
    * Failure Identification Code
    */
   CrPsFailCode_t TcFailCode;
   
   /**
    * Failure Data
    */
   CrPsThirtytwoBit_t TcFailData;
   
   /**
    * Type of Acknowledged TC
    */
   CrPsEightBit_t TcType;
   
   /**
    * Subtype of Acknowledged TC
    */
   CrPsEightBit_t TcSubtype;
   
   /**
    * Discriminant of Acknowledged TC
    */
   CrFwDiscriminant_t TcDisc;
   
   /**
    * Progress Step Of Failure
    */
   CrPsPrgStep_t TcPrgStep;
   
} VerFailedPrgrRep_t ;

/**
 * Structure for VerSuccTermRep
 */
typedef struct __attribute__((packed)) _VerSuccTermRep_t {
   /**
    * Packet header.
    */
   TmHeader_t Header;

} VerSuccTermRep_t ;

/**
 * Structure for VerFailedTermRep
 */
typedef struct __attribute__((packed)) _VerFailedTermRep_t {
   /**
    * Packet header.
    */
   TmHeader_t Header;

   /**
    * Spacer block.
    */
   uint8_t block_3[2];

   /**
    * Packet Seq. Control of Acknowledged TC
    */
   CrPsSixteenBit_t TcPcktSeqCtrl;
   
   /**
    * Failure Identification Code
    */
   CrPsFailCode_t TcFailCode;
   
   /**
    * Failure Data
    */
   CrPsThirtytwoBit_t TcFailData;
   
   /**
    * Type of Acknowledged TC
    */
   CrPsEightBit_t TcType;
   
   /**
    * Subtype of Acknowledged TC
    */
   CrPsEightBit_t TcSubtype;
   
   /**
    * Discriminant of Acknowledged TC
    */
   CrFwDiscriminant_t TcDisc;
   
} VerFailedTermRep_t ;

/**
 * Structure for VerFailedRoutingRep
 */
typedef struct __attribute__((packed)) _VerFailedRoutingRep_t {
   /**
    * Packet header.
    */
   TmHeader_t Header;

   /**
    * Spacer block.
    */
   uint8_t block_3[2];

   /**
    * Packet Seq. Control of Acknowledged TC
    */
   CrPsSixteenBit_t TcPcktSeqCtrl;
   
   /**
    * Failure Identification Code
    */
   CrPsFailCode_t TcFailCode;
   
   /**
    * invalid Destination for Rerouting Failure
    */
   CrFwDestSrc_t InvDest;
   
   /**
    * Type of Acknowledged TC
    */
   CrPsEightBit_t TcType;
   
   /**
    * Subtype of Acknowledged TC
    */
   CrPsEightBit_t TcSubtype;
   
   /**
    * Discriminant of Acknowledged TC
    */
   CrFwDiscriminant_t TcDisc;
   
} VerFailedRoutingRep_t ;

/**
 * Get "PckttVersNumber" from "VerSuccAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "PckttVersNumber".
 */
static inline CrPsThreeBit_t getVerSuccAccRepPckttVersNumber(void* p)
{
   uint16_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t >>= 13;
   t &= 0x7;
   return (CrPsThreeBit_t)t;
}

/**
 * Set "PckttVersNumber" in "VerSuccAccRep" packet.
 * @param p Pointer to the packet.
 * @param PckttVersNumber Value of "PckttVersNumber" to be set in packet.
 */
static inline void setVerSuccAccRepPckttVersNumber(void* p, CrPsThreeBit_t PckttVersNumber)
{
   uint16_t s;
   uint16_t t;
   s = ((uint16_t)PckttVersNumber << 13);
   s &= (uint16_t)0xe000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t &= (uint16_t)~0xe000ull;
   t |= s;
   t = __builtin_bswap16(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktId" from "VerSuccAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktId".
 */
static inline CrPsThirteenBit_t getVerSuccAccRepTcPcktId(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 16;
   t &= 0x1fff;
   return (CrPsThirteenBit_t)t;
}

/**
 * Set "TcPcktId" in "VerSuccAccRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktId Value of "TcPcktId" to be set in packet.
 */
static inline void setVerSuccAccRepTcPcktId(void* p, CrPsThirteenBit_t TcPcktId)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktId << 16);
   s &= (uint32_t)0x1fff0000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0x1fff0000ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktSeqCtrl" from "VerSuccAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktSeqCtrl".
 */
static inline CrPsSixteenBit_t getVerSuccAccRepTcPcktSeqCtrl(void* p)
{
   VerSuccAccRep_t* t;
   t = (VerSuccAccRep_t*)p;
   return __builtin_bswap16(t->TcPcktSeqCtrl);
}

/**
 * Set "TcPcktSeqCtrl" in "VerSuccAccRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktSeqCtrl Value of "TcPcktSeqCtrl" to be set in packet.
 */
static inline void setVerSuccAccRepTcPcktSeqCtrl(void* p, CrPsSixteenBit_t TcPcktSeqCtrl)
{
   VerSuccAccRep_t* t;
   t = (VerSuccAccRep_t*)p;
   t->TcPcktSeqCtrl = __builtin_bswap16(TcPcktSeqCtrl);
}

/**
 * Get "PckttVersNumber" from "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "PckttVersNumber".
 */
static inline CrPsThreeBit_t getVerFailedAccRepPckttVersNumber(void* p)
{
   uint16_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t >>= 13;
   t &= 0x7;
   return (CrPsThreeBit_t)t;
}

/**
 * Set "PckttVersNumber" in "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @param PckttVersNumber Value of "PckttVersNumber" to be set in packet.
 */
static inline void setVerFailedAccRepPckttVersNumber(void* p, CrPsThreeBit_t PckttVersNumber)
{
   uint16_t s;
   uint16_t t;
   s = ((uint16_t)PckttVersNumber << 13);
   s &= (uint16_t)0xe000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t &= (uint16_t)~0xe000ull;
   t |= s;
   t = __builtin_bswap16(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktId" from "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktId".
 */
static inline CrPsThirteenBit_t getVerFailedAccRepTcPcktId(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 16;
   t &= 0x1fff;
   return (CrPsThirteenBit_t)t;
}

/**
 * Set "TcPcktId" in "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktId Value of "TcPcktId" to be set in packet.
 */
static inline void setVerFailedAccRepTcPcktId(void* p, CrPsThirteenBit_t TcPcktId)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktId << 16);
   s &= (uint32_t)0x1fff0000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0x1fff0000ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktSeqCtrl" from "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktSeqCtrl".
 */
static inline CrPsSixteenBit_t getVerFailedAccRepTcPcktSeqCtrl(void* p)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   return __builtin_bswap16(t->TcPcktSeqCtrl);
}

/**
 * Set "TcPcktSeqCtrl" in "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktSeqCtrl Value of "TcPcktSeqCtrl" to be set in packet.
 */
static inline void setVerFailedAccRepTcPcktSeqCtrl(void* p, CrPsSixteenBit_t TcPcktSeqCtrl)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   t->TcPcktSeqCtrl = __builtin_bswap16(TcPcktSeqCtrl);
}

/**
 * Get "TcFailCode" from "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcFailCode".
 */
static inline CrPsFailCode_t getVerFailedAccRepTcFailCode(void* p)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   return __builtin_bswap16(t->TcFailCode);
}

/**
 * Set "TcFailCode" in "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @param TcFailCode Value of "TcFailCode" to be set in packet.
 */
static inline void setVerFailedAccRepTcFailCode(void* p, CrPsFailCode_t TcFailCode)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   t->TcFailCode = __builtin_bswap16(TcFailCode);
}

/**
 * Get "TcFailData" from "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcFailData".
 */
static inline CrPsThirtytwoBit_t getVerFailedAccRepTcFailData(void* p)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   return __builtin_bswap32(t->TcFailData);
}

/**
 * Set "TcFailData" in "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @param TcFailData Value of "TcFailData" to be set in packet.
 */
static inline void setVerFailedAccRepTcFailData(void* p, CrPsThirtytwoBit_t TcFailData)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   t->TcFailData = __builtin_bswap32(TcFailData);
}

/**
 * Get "TcType" from "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcType".
 */
static inline CrPsEightBit_t getVerFailedAccRepTcType(void* p)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   return t->TcType;
}

/**
 * Set "TcType" in "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @param TcType Value of "TcType" to be set in packet.
 */
static inline void setVerFailedAccRepTcType(void* p, CrPsEightBit_t TcType)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   t->TcType = TcType;
}

/**
 * Get "TcSubtype" from "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcSubtype".
 */
static inline CrPsEightBit_t getVerFailedAccRepTcSubtype(void* p)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   return t->TcSubtype;
}

/**
 * Set "TcSubtype" in "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @param TcSubtype Value of "TcSubtype" to be set in packet.
 */
static inline void setVerFailedAccRepTcSubtype(void* p, CrPsEightBit_t TcSubtype)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   t->TcSubtype = TcSubtype;
}

/**
 * Get "TcDisc" from "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcDisc".
 */
static inline CrFwDiscriminant_t getVerFailedAccRepTcDisc(void* p)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   return __builtin_bswap16(t->TcDisc);
}

/**
 * Set "TcDisc" in "VerFailedAccRep" packet.
 * @param p Pointer to the packet.
 * @param TcDisc Value of "TcDisc" to be set in packet.
 */
static inline void setVerFailedAccRepTcDisc(void* p, CrFwDiscriminant_t TcDisc)
{
   VerFailedAccRep_t* t;
   t = (VerFailedAccRep_t*)p;
   t->TcDisc = __builtin_bswap16(TcDisc);
}

/**
 * Get "PckttVersNumber" from "VerSuccStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "PckttVersNumber".
 */
static inline CrPsThreeBit_t getVerSuccStartRepPckttVersNumber(void* p)
{
   uint16_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t >>= 13;
   t &= 0x7;
   return (CrPsThreeBit_t)t;
}

/**
 * Set "PckttVersNumber" in "VerSuccStartRep" packet.
 * @param p Pointer to the packet.
 * @param PckttVersNumber Value of "PckttVersNumber" to be set in packet.
 */
static inline void setVerSuccStartRepPckttVersNumber(void* p, CrPsThreeBit_t PckttVersNumber)
{
   uint16_t s;
   uint16_t t;
   s = ((uint16_t)PckttVersNumber << 13);
   s &= (uint16_t)0xe000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t &= (uint16_t)~0xe000ull;
   t |= s;
   t = __builtin_bswap16(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktId" from "VerSuccStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktId".
 */
static inline CrPsThirteenBit_t getVerSuccStartRepTcPcktId(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 16;
   t &= 0x1fff;
   return (CrPsThirteenBit_t)t;
}

/**
 * Set "TcPcktId" in "VerSuccStartRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktId Value of "TcPcktId" to be set in packet.
 */
static inline void setVerSuccStartRepTcPcktId(void* p, CrPsThirteenBit_t TcPcktId)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktId << 16);
   s &= (uint32_t)0x1fff0000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0x1fff0000ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktSeqCtrl" from "VerSuccStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktSeqCtrl".
 */
static inline CrPsSixteenBit_t getVerSuccStartRepTcPcktSeqCtrl(void* p)
{
   VerSuccStartRep_t* t;
   t = (VerSuccStartRep_t*)p;
   return __builtin_bswap16(t->TcPcktSeqCtrl);
}

/**
 * Set "TcPcktSeqCtrl" in "VerSuccStartRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktSeqCtrl Value of "TcPcktSeqCtrl" to be set in packet.
 */
static inline void setVerSuccStartRepTcPcktSeqCtrl(void* p, CrPsSixteenBit_t TcPcktSeqCtrl)
{
   VerSuccStartRep_t* t;
   t = (VerSuccStartRep_t*)p;
   t->TcPcktSeqCtrl = __builtin_bswap16(TcPcktSeqCtrl);
}

/**
 * Get "PckttVersNumber" from "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "PckttVersNumber".
 */
static inline CrPsThreeBit_t getVerFailedStartRepPckttVersNumber(void* p)
{
   uint16_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t >>= 13;
   t &= 0x7;
   return (CrPsThreeBit_t)t;
}

/**
 * Set "PckttVersNumber" in "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @param PckttVersNumber Value of "PckttVersNumber" to be set in packet.
 */
static inline void setVerFailedStartRepPckttVersNumber(void* p, CrPsThreeBit_t PckttVersNumber)
{
   uint16_t s;
   uint16_t t;
   s = ((uint16_t)PckttVersNumber << 13);
   s &= (uint16_t)0xe000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t &= (uint16_t)~0xe000ull;
   t |= s;
   t = __builtin_bswap16(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktId" from "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktId".
 */
static inline CrPsThirteenBit_t getVerFailedStartRepTcPcktId(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 16;
   t &= 0x1fff;
   return (CrPsThirteenBit_t)t;
}

/**
 * Set "TcPcktId" in "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktId Value of "TcPcktId" to be set in packet.
 */
static inline void setVerFailedStartRepTcPcktId(void* p, CrPsThirteenBit_t TcPcktId)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktId << 16);
   s &= (uint32_t)0x1fff0000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0x1fff0000ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktSeqCtrl" from "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktSeqCtrl".
 */
static inline CrPsSixteenBit_t getVerFailedStartRepTcPcktSeqCtrl(void* p)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   return __builtin_bswap16(t->TcPcktSeqCtrl);
}

/**
 * Set "TcPcktSeqCtrl" in "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktSeqCtrl Value of "TcPcktSeqCtrl" to be set in packet.
 */
static inline void setVerFailedStartRepTcPcktSeqCtrl(void* p, CrPsSixteenBit_t TcPcktSeqCtrl)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   t->TcPcktSeqCtrl = __builtin_bswap16(TcPcktSeqCtrl);
}

/**
 * Get "TcFailCode" from "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcFailCode".
 */
static inline CrPsFailCode_t getVerFailedStartRepTcFailCode(void* p)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   return __builtin_bswap16(t->TcFailCode);
}

/**
 * Set "TcFailCode" in "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @param TcFailCode Value of "TcFailCode" to be set in packet.
 */
static inline void setVerFailedStartRepTcFailCode(void* p, CrPsFailCode_t TcFailCode)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   t->TcFailCode = __builtin_bswap16(TcFailCode);
}

/**
 * Get "TcFailData" from "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcFailData".
 */
static inline CrPsThirtytwoBit_t getVerFailedStartRepTcFailData(void* p)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   return __builtin_bswap32(t->TcFailData);
}

/**
 * Set "TcFailData" in "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @param TcFailData Value of "TcFailData" to be set in packet.
 */
static inline void setVerFailedStartRepTcFailData(void* p, CrPsThirtytwoBit_t TcFailData)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   t->TcFailData = __builtin_bswap32(TcFailData);
}

/**
 * Get "TcType" from "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcType".
 */
static inline CrPsEightBit_t getVerFailedStartRepTcType(void* p)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   return t->TcType;
}

/**
 * Set "TcType" in "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @param TcType Value of "TcType" to be set in packet.
 */
static inline void setVerFailedStartRepTcType(void* p, CrPsEightBit_t TcType)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   t->TcType = TcType;
}

/**
 * Get "TcSubtype" from "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcSubtype".
 */
static inline CrPsEightBit_t getVerFailedStartRepTcSubtype(void* p)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   return t->TcSubtype;
}

/**
 * Set "TcSubtype" in "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @param TcSubtype Value of "TcSubtype" to be set in packet.
 */
static inline void setVerFailedStartRepTcSubtype(void* p, CrPsEightBit_t TcSubtype)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   t->TcSubtype = TcSubtype;
}

/**
 * Get "TcDisc" from "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcDisc".
 */
static inline CrFwDiscriminant_t getVerFailedStartRepTcDisc(void* p)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   return __builtin_bswap16(t->TcDisc);
}

/**
 * Set "TcDisc" in "VerFailedStartRep" packet.
 * @param p Pointer to the packet.
 * @param TcDisc Value of "TcDisc" to be set in packet.
 */
static inline void setVerFailedStartRepTcDisc(void* p, CrFwDiscriminant_t TcDisc)
{
   VerFailedStartRep_t* t;
   t = (VerFailedStartRep_t*)p;
   t->TcDisc = __builtin_bswap16(TcDisc);
}

/**
 * Get "TcPcktId" from "VerSuccPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktId".
 */
static inline CrPsThirteenBit_t getVerSuccPrgrRepTcPcktId(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 19;
   t &= 0x1fff;
   return (CrPsThirteenBit_t)t;
}

/**
 * Set "TcPcktId" in "VerSuccPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktId Value of "TcPcktId" to be set in packet.
 */
static inline void setVerSuccPrgrRepTcPcktId(void* p, CrPsThirteenBit_t TcPcktId)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktId << 19);
   s &= (uint32_t)0xfff80000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0xfff80000ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktSeqCtrl" from "VerSuccPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktSeqCtrl".
 */
static inline CrPsSixteenBit_t getVerSuccPrgrRepTcPcktSeqCtrl(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[1], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 11;
   t &= 0xffff;
   return (CrPsSixteenBit_t)t;
}

/**
 * Set "TcPcktSeqCtrl" in "VerSuccPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktSeqCtrl Value of "TcPcktSeqCtrl" to be set in packet.
 */
static inline void setVerSuccPrgrRepTcPcktSeqCtrl(void* p, CrPsSixteenBit_t TcPcktSeqCtrl)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktSeqCtrl << 11);
   s &= (uint32_t)0x7fff800ull;
   (void)memcpy(&t, &((uint8_t*)p)[1], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0x7fff800ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[1], &t, sizeof(t));
}

/**
 * Get "PckttVersNumber" from "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "PckttVersNumber".
 */
static inline CrPsThreeBit_t getVerFailedPrgrRepPckttVersNumber(void* p)
{
   uint16_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t >>= 13;
   t &= 0x7;
   return (CrPsThreeBit_t)t;
}

/**
 * Set "PckttVersNumber" in "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param PckttVersNumber Value of "PckttVersNumber" to be set in packet.
 */
static inline void setVerFailedPrgrRepPckttVersNumber(void* p, CrPsThreeBit_t PckttVersNumber)
{
   uint16_t s;
   uint16_t t;
   s = ((uint16_t)PckttVersNumber << 13);
   s &= (uint16_t)0xe000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t &= (uint16_t)~0xe000ull;
   t |= s;
   t = __builtin_bswap16(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktId" from "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktId".
 */
static inline CrPsThirteenBit_t getVerFailedPrgrRepTcPcktId(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 16;
   t &= 0x1fff;
   return (CrPsThirteenBit_t)t;
}

/**
 * Set "TcPcktId" in "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktId Value of "TcPcktId" to be set in packet.
 */
static inline void setVerFailedPrgrRepTcPcktId(void* p, CrPsThirteenBit_t TcPcktId)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktId << 16);
   s &= (uint32_t)0x1fff0000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0x1fff0000ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktSeqCtrl" from "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktSeqCtrl".
 */
static inline CrPsSixteenBit_t getVerFailedPrgrRepTcPcktSeqCtrl(void* p)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   return __builtin_bswap16(t->TcPcktSeqCtrl);
}

/**
 * Set "TcPcktSeqCtrl" in "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktSeqCtrl Value of "TcPcktSeqCtrl" to be set in packet.
 */
static inline void setVerFailedPrgrRepTcPcktSeqCtrl(void* p, CrPsSixteenBit_t TcPcktSeqCtrl)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   t->TcPcktSeqCtrl = __builtin_bswap16(TcPcktSeqCtrl);
}

/**
 * Get "TcFailCode" from "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcFailCode".
 */
static inline CrPsFailCode_t getVerFailedPrgrRepTcFailCode(void* p)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   return __builtin_bswap16(t->TcFailCode);
}

/**
 * Set "TcFailCode" in "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcFailCode Value of "TcFailCode" to be set in packet.
 */
static inline void setVerFailedPrgrRepTcFailCode(void* p, CrPsFailCode_t TcFailCode)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   t->TcFailCode = __builtin_bswap16(TcFailCode);
}

/**
 * Get "TcFailData" from "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcFailData".
 */
static inline CrPsThirtytwoBit_t getVerFailedPrgrRepTcFailData(void* p)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   return __builtin_bswap32(t->TcFailData);
}

/**
 * Set "TcFailData" in "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcFailData Value of "TcFailData" to be set in packet.
 */
static inline void setVerFailedPrgrRepTcFailData(void* p, CrPsThirtytwoBit_t TcFailData)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   t->TcFailData = __builtin_bswap32(TcFailData);
}

/**
 * Get "TcType" from "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcType".
 */
static inline CrPsEightBit_t getVerFailedPrgrRepTcType(void* p)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   return t->TcType;
}

/**
 * Set "TcType" in "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcType Value of "TcType" to be set in packet.
 */
static inline void setVerFailedPrgrRepTcType(void* p, CrPsEightBit_t TcType)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   t->TcType = TcType;
}

/**
 * Get "TcSubtype" from "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcSubtype".
 */
static inline CrPsEightBit_t getVerFailedPrgrRepTcSubtype(void* p)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   return t->TcSubtype;
}

/**
 * Set "TcSubtype" in "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcSubtype Value of "TcSubtype" to be set in packet.
 */
static inline void setVerFailedPrgrRepTcSubtype(void* p, CrPsEightBit_t TcSubtype)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   t->TcSubtype = TcSubtype;
}

/**
 * Get "TcDisc" from "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcDisc".
 */
static inline CrFwDiscriminant_t getVerFailedPrgrRepTcDisc(void* p)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   return __builtin_bswap16(t->TcDisc);
}

/**
 * Set "TcDisc" in "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcDisc Value of "TcDisc" to be set in packet.
 */
static inline void setVerFailedPrgrRepTcDisc(void* p, CrFwDiscriminant_t TcDisc)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   t->TcDisc = __builtin_bswap16(TcDisc);
}

/**
 * Get "TcPrgStep" from "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPrgStep".
 */
static inline CrPsPrgStep_t getVerFailedPrgrRepTcPrgStep(void* p)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   return t->TcPrgStep;
}

/**
 * Set "TcPrgStep" in "VerFailedPrgrRep" packet.
 * @param p Pointer to the packet.
 * @param TcPrgStep Value of "TcPrgStep" to be set in packet.
 */
static inline void setVerFailedPrgrRepTcPrgStep(void* p, CrPsPrgStep_t TcPrgStep)
{
   VerFailedPrgrRep_t* t;
   t = (VerFailedPrgrRep_t*)p;
   t->TcPrgStep = TcPrgStep;
}

/**
 * Get "TcPcktId" from "VerSuccTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktId".
 */
static inline CrPsThirteenBit_t getVerSuccTermRepTcPcktId(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 19;
   t &= 0x1fff;
   return (CrPsThirteenBit_t)t;
}

/**
 * Set "TcPcktId" in "VerSuccTermRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktId Value of "TcPcktId" to be set in packet.
 */
static inline void setVerSuccTermRepTcPcktId(void* p, CrPsThirteenBit_t TcPcktId)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktId << 19);
   s &= (uint32_t)0xfff80000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0xfff80000ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktSeqCtrl" from "VerSuccTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktSeqCtrl".
 */
static inline CrPsSixteenBit_t getVerSuccTermRepTcPcktSeqCtrl(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[1], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 11;
   t &= 0xffff;
   return (CrPsSixteenBit_t)t;
}

/**
 * Set "TcPcktSeqCtrl" in "VerSuccTermRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktSeqCtrl Value of "TcPcktSeqCtrl" to be set in packet.
 */
static inline void setVerSuccTermRepTcPcktSeqCtrl(void* p, CrPsSixteenBit_t TcPcktSeqCtrl)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktSeqCtrl << 11);
   s &= (uint32_t)0x7fff800ull;
   (void)memcpy(&t, &((uint8_t*)p)[1], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0x7fff800ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[1], &t, sizeof(t));
}

/**
 * Get "PckttVersNumber" from "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "PckttVersNumber".
 */
static inline CrPsThreeBit_t getVerFailedTermRepPckttVersNumber(void* p)
{
   uint16_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t >>= 13;
   t &= 0x7;
   return (CrPsThreeBit_t)t;
}

/**
 * Set "PckttVersNumber" in "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @param PckttVersNumber Value of "PckttVersNumber" to be set in packet.
 */
static inline void setVerFailedTermRepPckttVersNumber(void* p, CrPsThreeBit_t PckttVersNumber)
{
   uint16_t s;
   uint16_t t;
   s = ((uint16_t)PckttVersNumber << 13);
   s &= (uint16_t)0xe000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t &= (uint16_t)~0xe000ull;
   t |= s;
   t = __builtin_bswap16(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktId" from "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktId".
 */
static inline CrPsThirteenBit_t getVerFailedTermRepTcPcktId(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 16;
   t &= 0x1fff;
   return (CrPsThirteenBit_t)t;
}

/**
 * Set "TcPcktId" in "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktId Value of "TcPcktId" to be set in packet.
 */
static inline void setVerFailedTermRepTcPcktId(void* p, CrPsThirteenBit_t TcPcktId)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktId << 16);
   s &= (uint32_t)0x1fff0000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0x1fff0000ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktSeqCtrl" from "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktSeqCtrl".
 */
static inline CrPsSixteenBit_t getVerFailedTermRepTcPcktSeqCtrl(void* p)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   return __builtin_bswap16(t->TcPcktSeqCtrl);
}

/**
 * Set "TcPcktSeqCtrl" in "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktSeqCtrl Value of "TcPcktSeqCtrl" to be set in packet.
 */
static inline void setVerFailedTermRepTcPcktSeqCtrl(void* p, CrPsSixteenBit_t TcPcktSeqCtrl)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   t->TcPcktSeqCtrl = __builtin_bswap16(TcPcktSeqCtrl);
}

/**
 * Get "TcFailCode" from "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcFailCode".
 */
static inline CrPsFailCode_t getVerFailedTermRepTcFailCode(void* p)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   return __builtin_bswap16(t->TcFailCode);
}

/**
 * Set "TcFailCode" in "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @param TcFailCode Value of "TcFailCode" to be set in packet.
 */
static inline void setVerFailedTermRepTcFailCode(void* p, CrPsFailCode_t TcFailCode)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   t->TcFailCode = __builtin_bswap16(TcFailCode);
}

/**
 * Get "TcFailData" from "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcFailData".
 */
static inline CrPsThirtytwoBit_t getVerFailedTermRepTcFailData(void* p)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   return __builtin_bswap32(t->TcFailData);
}

/**
 * Set "TcFailData" in "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @param TcFailData Value of "TcFailData" to be set in packet.
 */
static inline void setVerFailedTermRepTcFailData(void* p, CrPsThirtytwoBit_t TcFailData)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   t->TcFailData = __builtin_bswap32(TcFailData);
}

/**
 * Get "TcType" from "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcType".
 */
static inline CrPsEightBit_t getVerFailedTermRepTcType(void* p)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   return t->TcType;
}

/**
 * Set "TcType" in "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @param TcType Value of "TcType" to be set in packet.
 */
static inline void setVerFailedTermRepTcType(void* p, CrPsEightBit_t TcType)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   t->TcType = TcType;
}

/**
 * Get "TcSubtype" from "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcSubtype".
 */
static inline CrPsEightBit_t getVerFailedTermRepTcSubtype(void* p)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   return t->TcSubtype;
}

/**
 * Set "TcSubtype" in "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @param TcSubtype Value of "TcSubtype" to be set in packet.
 */
static inline void setVerFailedTermRepTcSubtype(void* p, CrPsEightBit_t TcSubtype)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   t->TcSubtype = TcSubtype;
}

/**
 * Get "TcDisc" from "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcDisc".
 */
static inline CrFwDiscriminant_t getVerFailedTermRepTcDisc(void* p)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   return __builtin_bswap16(t->TcDisc);
}

/**
 * Set "TcDisc" in "VerFailedTermRep" packet.
 * @param p Pointer to the packet.
 * @param TcDisc Value of "TcDisc" to be set in packet.
 */
static inline void setVerFailedTermRepTcDisc(void* p, CrFwDiscriminant_t TcDisc)
{
   VerFailedTermRep_t* t;
   t = (VerFailedTermRep_t*)p;
   t->TcDisc = __builtin_bswap16(TcDisc);
}

/**
 * Get "PckttVersNumber" from "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "PckttVersNumber".
 */
static inline CrPsThreeBit_t getVerFailedRoutingRepPckttVersNumber(void* p)
{
   uint16_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t >>= 13;
   t &= 0x7;
   return (CrPsThreeBit_t)t;
}

/**
 * Set "PckttVersNumber" in "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @param PckttVersNumber Value of "PckttVersNumber" to be set in packet.
 */
static inline void setVerFailedRoutingRepPckttVersNumber(void* p, CrPsThreeBit_t PckttVersNumber)
{
   uint16_t s;
   uint16_t t;
   s = ((uint16_t)PckttVersNumber << 13);
   s &= (uint16_t)0xe000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap16(t);
   t &= (uint16_t)~0xe000ull;
   t |= s;
   t = __builtin_bswap16(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktId" from "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktId".
 */
static inline CrPsThirteenBit_t getVerFailedRoutingRepTcPcktId(void* p)
{
   uint32_t t;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t >>= 16;
   t &= 0x1fff;
   return (CrPsThirteenBit_t)t;
}

/**
 * Set "TcPcktId" in "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktId Value of "TcPcktId" to be set in packet.
 */
static inline void setVerFailedRoutingRepTcPcktId(void* p, CrPsThirteenBit_t TcPcktId)
{
   uint32_t s;
   uint32_t t;
   s = ((uint32_t)TcPcktId << 16);
   s &= (uint32_t)0x1fff0000ull;
   (void)memcpy(&t, &((uint8_t*)p)[0], sizeof(t));
   t = __builtin_bswap32(t);
   t &= (uint32_t)~0x1fff0000ull;
   t |= s;
   t = __builtin_bswap32(t);
   (void)memcpy(&((uint8_t*)p)[0], &t, sizeof(t));
}

/**
 * Get "TcPcktSeqCtrl" from "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcPcktSeqCtrl".
 */
static inline CrPsSixteenBit_t getVerFailedRoutingRepTcPcktSeqCtrl(void* p)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   return __builtin_bswap16(t->TcPcktSeqCtrl);
}

/**
 * Set "TcPcktSeqCtrl" in "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @param TcPcktSeqCtrl Value of "TcPcktSeqCtrl" to be set in packet.
 */
static inline void setVerFailedRoutingRepTcPcktSeqCtrl(void* p, CrPsSixteenBit_t TcPcktSeqCtrl)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   t->TcPcktSeqCtrl = __builtin_bswap16(TcPcktSeqCtrl);
}

/**
 * Get "TcFailCode" from "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcFailCode".
 */
static inline CrPsFailCode_t getVerFailedRoutingRepTcFailCode(void* p)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   return __builtin_bswap16(t->TcFailCode);
}

/**
 * Set "TcFailCode" in "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @param TcFailCode Value of "TcFailCode" to be set in packet.
 */
static inline void setVerFailedRoutingRepTcFailCode(void* p, CrPsFailCode_t TcFailCode)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   t->TcFailCode = __builtin_bswap16(TcFailCode);
}

/**
 * Get "InvDest" from "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "InvDest".
 */
static inline CrFwDestSrc_t getVerFailedRoutingRepInvDest(void* p)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   return t->InvDest;
}

/**
 * Set "InvDest" in "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @param InvDest Value of "InvDest" to be set in packet.
 */
static inline void setVerFailedRoutingRepInvDest(void* p, CrFwDestSrc_t InvDest)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   t->InvDest = InvDest;
}

/**
 * Get "TcType" from "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcType".
 */
static inline CrPsEightBit_t getVerFailedRoutingRepTcType(void* p)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   return t->TcType;
}

/**
 * Set "TcType" in "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @param TcType Value of "TcType" to be set in packet.
 */
static inline void setVerFailedRoutingRepTcType(void* p, CrPsEightBit_t TcType)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   t->TcType = TcType;
}

/**
 * Get "TcSubtype" from "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcSubtype".
 */
static inline CrPsEightBit_t getVerFailedRoutingRepTcSubtype(void* p)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   return t->TcSubtype;
}

/**
 * Set "TcSubtype" in "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @param TcSubtype Value of "TcSubtype" to be set in packet.
 */
static inline void setVerFailedRoutingRepTcSubtype(void* p, CrPsEightBit_t TcSubtype)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   t->TcSubtype = TcSubtype;
}

/**
 * Get "TcDisc" from "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @return Value of "TcDisc".
 */
static inline CrFwDiscriminant_t getVerFailedRoutingRepTcDisc(void* p)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   return __builtin_bswap16(t->TcDisc);
}

/**
 * Set "TcDisc" in "VerFailedRoutingRep" packet.
 * @param p Pointer to the packet.
 * @param TcDisc Value of "TcDisc" to be set in packet.
 */
static inline void setVerFailedRoutingRepTcDisc(void* p, CrFwDiscriminant_t TcDisc)
{
   VerFailedRoutingRep_t* t;
   t = (VerFailedRoutingRep_t*)p;
   t->TcDisc = __builtin_bswap16(TcDisc);
}


/*----------------------------------------------------------------------------*/
#endif /* CRPSPCKTVER_H */
